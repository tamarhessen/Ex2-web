{"ast":null,"code":"var _jsxFileName = \"/home/gp/Ex2-web-1/src/feed/Comments.js\",\n  _s = $RefreshSig$();\nimport Comment from \"./Comment\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  text,\n  image,\n  oldComments,\n  account\n}) {\n  _s();\n  const [comments, setComments] = useState(oldComments);\n  const onDelete = id => {\n    console.log(oldComments);\n    if (id > -1) {\n      const updatedComments = [...comments];\n      updatedComments.splice(id, 1);\n      oldComments.splice(id, 1);\n      setComments(updatedComments);\n    }\n    console.log(comments);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), image && typeof image !== 'string' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(image),\n      alt: \"Uploaded\",\n      className: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 51\n    }, this) : null, image && typeof image === 'string' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Linked\",\n      className: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 51\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n        id: index,\n        username: comment[\"username\"],\n        userImg: comment[\"userImg\"],\n        comment: comment[\"comment\"],\n        account: account,\n        onDelete: onDelete\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Comments, \"NX/CF1exvkL0bJ+FcZSV1JcrnQc=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["Comment","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","text","image","oldComments","account","_s","comments","setComments","onDelete","id","console","log","updatedComments","splice","children","style","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","src","URL","createObjectURL","alt","className","map","comment","index","username","userImg","_c","$RefreshReg$"],"sources":["/home/gp/Ex2-web-1/src/feed/Comments.js"],"sourcesContent":["import Comment from \"./Comment\";\nimport React, {useState} from \"react\";\n\nfunction Comments({ text, image, oldComments, account }) {\n    const [comments, setComments] = useState(oldComments);\n    const onDelete = (id) => {\n        console.log(oldComments);\n        if (id > -1) {\n            const updatedComments = [...comments];\n            updatedComments.splice(id, 1);\n            oldComments.splice(id,1);\n            setComments(updatedComments);\n        }\n        console.log(comments)\n    };\n\n\n    return (\n        <>\n            <div style={{ whiteSpace: 'pre-wrap' }}>{text}</div>\n            {image && typeof image !== 'string' ? <img src={URL.createObjectURL(image)} alt=\"Uploaded\" className={\"image\"} /> : null}\n            {image && typeof image === 'string' ? <img src={image} alt=\"Linked\" className={\"image\"} /> : null}\n\n\n\n            <ul>\n                {comments.map((comment, index) => (\n                    <Comment\n                        key={index}\n                        id={index}\n                        username={comment[\"username\"]}\n                        userImg={comment[\"userImg\"]}\n                        comment={comment[\"comment\"]}\n                        account={account}\n                        onDelete={onDelete}\n                    />\n                ))}\n            </ul>\n        </>\n    )\n}\n\nexport default Comments;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,WAAW;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACQ,WAAW,CAAC;EACrD,MAAMK,QAAQ,GAAIC,EAAE,IAAK;IACrBC,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;IACxB,IAAIM,EAAE,GAAG,CAAC,CAAC,EAAE;MACT,MAAMG,eAAe,GAAG,CAAC,GAAGN,QAAQ,CAAC;MACrCM,eAAe,CAACC,MAAM,CAACJ,EAAE,EAAE,CAAC,CAAC;MAC7BN,WAAW,CAACU,MAAM,CAACJ,EAAE,EAAC,CAAC,CAAC;MACxBF,WAAW,CAACK,eAAe,CAAC;IAChC;IACAF,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EACzB,CAAC;EAGD,oBACIT,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAKkB,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAF,QAAA,EAAEb;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACnDlB,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,gBAAGL,OAAA;MAAKwB,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACrB,KAAK,CAAE;MAACsB,GAAG,EAAC,UAAU;MAACC,SAAS,EAAE;IAAQ;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,EACvHlB,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,gBAAGL,OAAA;MAAKwB,GAAG,EAAEnB,KAAM;MAACsB,GAAG,EAAC,QAAQ;MAACC,SAAS,EAAE;IAAQ;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,eAIjGvB,OAAA;MAAAiB,QAAA,EACKR,QAAQ,CAACoB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzB/B,OAAA,CAACJ,OAAO;QAEJgB,EAAE,EAAEmB,KAAM;QACVC,QAAQ,EAAEF,OAAO,CAAC,UAAU,CAAE;QAC9BG,OAAO,EAAEH,OAAO,CAAC,SAAS,CAAE;QAC5BA,OAAO,EAAEA,OAAO,CAAC,SAAS,CAAE;QAC5BvB,OAAO,EAAEA,OAAQ;QACjBI,QAAQ,EAAEA;MAAS,GANdoB,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACP,CAAC;AAEX;AAACf,EAAA,CArCQL,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}