{"ast":null,"code":"var _jsxFileName = \"/home/gp/Ex2-web-1/src/feed/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Comment({\n  id,\n  username,\n  userImg,\n  comment,\n  account,\n  onDelete\n}) {\n  _s();\n  const [editMode, setEditMode] = useState(false);\n  const [editedComment, setEditedComment] = useState(comment);\n  const [unEditedComment, setUnEditedComment] = useState(comment);\n  const handleEditComment = () => {\n    setEditMode(true);\n  };\n  const handleSaveEdit = () => {\n    // Save the edited comment\n    // You can perform any validation or sanitization here\n    // For simplicity, I'm directly updating the state\n    setUnEditedComment(editedComment);\n    setEditMode(false);\n    // Call an edit function passing the edited comment\n  };\n  const handleCancelEdit = () => {\n    setEditedComment(unEditedComment);\n    setEditMode(false);\n  };\n  const handleDeleteComment = () => {\n    // Call the onDelete function passing the comment id\n    console.log(id);\n    onDelete(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: userImg,\n      className: \"Logo\",\n      alt: \"User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        className: \"comment-body\",\n        children: editMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input\",\n          value: editedComment,\n          onChange: e => setEditedComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: editedComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), account === username && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveEdit,\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditComment,\n            className: \"btn btn-warning\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteComment,\n            className: \"btn btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Comment, \"TuZZu7efWNeRoJ2yt//9VzKlPRQ=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","id","username","userImg","comment","account","onDelete","_s","editMode","setEditMode","editedComment","setEditedComment","unEditedComment","setUnEditedComment","handleEditComment","handleSaveEdit","handleCancelEdit","handleDeleteComment","console","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","whiteSpace","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/gp/Ex2-web-1/src/feed/Comment.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Comment({ id, username, userImg, comment, account, onDelete }) {\n    const [editMode, setEditMode] = useState(false);\n    const [editedComment, setEditedComment] = useState(comment);\n    const [unEditedComment, setUnEditedComment] = useState(comment);\n\n    const handleEditComment = () => {\n        setEditMode(true);\n    };\n\n    const handleSaveEdit = () => {\n        // Save the edited comment\n        // You can perform any validation or sanitization here\n        // For simplicity, I'm directly updating the state\n        setUnEditedComment(editedComment);\n        setEditMode(false);\n        // Call an edit function passing the edited comment\n    };\n    const handleCancelEdit = () => {\n        setEditedComment(unEditedComment);\n        setEditMode(false);\n    }\n\n    const handleDeleteComment = () => {\n        // Call the onDelete function passing the comment id\n        console.log(id);\n        onDelete(id);\n    };\n\n    return (\n        <div className={\"comment\"}>\n            <img src={userImg} className=\"Logo\" alt=\"User\" />\n            <div className=\"message-box\">\n                <div className=\"comment-header\">\n                    <span className=\"username\">{username}</span>\n                </div>\n                <div style={{ whiteSpace: 'pre-wrap' }} className=\"comment-body\">\n                    {editMode ? (\n                        <textarea\n                            className={\"input\"}\n                            value={editedComment}\n                            onChange={(e) => setEditedComment(e.target.value)}\n                        />\n                    ) : (\n                        <span>{editedComment}</span>\n                    )}\n                </div>\n                {account === username && (\n                    <div className=\"comment-actions\">\n                        {editMode ? (\n                            <>\n                            <button onClick={handleSaveEdit} className={\"btn btn-primary\"}>\n                                Save\n                            </button>\n                            <button onClick={handleCancelEdit} className={\"btn btn-secondary\"}>Cancel</button>\n                            </>\n                        ) : (\n                            <>\n                                <button onClick={handleEditComment} className={\"btn btn-warning\"}>\n                                    Edit\n                                </button>\n                                <button onClick={handleDeleteComment} className={\"btn btn-danger\"}>\n                                    Delete\n                                </button>\n                            </>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Comment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}