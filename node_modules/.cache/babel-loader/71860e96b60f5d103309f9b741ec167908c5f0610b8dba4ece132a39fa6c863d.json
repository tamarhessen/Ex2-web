{"ast":null,"code":"var _jsxFileName = \"/home/gp/Ex2-web-1/src/feed/FeedScreen.js\",\n  _s = $RefreshSig$();\nimport InfoBar from \"./InfoBar\";\nimport MainScreen from \"./MainScreen\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport './LightModeFeed.css';\nimport './NightModeFeed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FeedScreen() {\n  _s();\n  const [mode, setMode] = useState(true);\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  const {\n    displayName,\n    profilePicture\n  } = state;\n  const [profileImageUrl, setProfileImageUrl] = useState(null);\n  useEffect(() => {\n    if (profilePicture instanceof File || profilePicture instanceof Blob) {\n      setProfileImageUrl(URL.createObjectURL(profilePicture));\n    } else if (typeof profilePicture === 'string') {\n      // Assuming profilePicture is a URL string\n      fetch(profilePicture).then(response => response.blob()).then(blob => setProfileImageUrl(URL.createObjectURL(blob))).catch(error => console.error('Error fetching profile picture:', error));\n    }\n  }, [profilePicture]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\",\n      integrity: \"sha256-2TnSHycBDAm2wpZmgdi0z81kykGPJAkiUY+Wf97RbvY=\",\n      crossOrigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mode ? \"light-mode\" : \"night-mode\",\n      children: [profileImageUrl && /*#__PURE__*/_jsxDEV(InfoBar, {\n        userImg: profileImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(MainScreen, {\n        username: displayName,\n        userImg: profileImageUrl,\n        mode: mode,\n        setMode: setMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(FeedScreen, \"QMb06IKkNAAyQqQrLkcYAXhrBNw=\", false, function () {\n  return [useLocation];\n});\n_c = FeedScreen;\nexport default FeedScreen;\n\n// import React from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// function FeedScreen() {\n//   const location = useLocation();\n//   const { state } = location;\n\n//   if (!state || !state.username || !state.profilePicture) {\n//     // Handle case where user details are not available\n//     return <div>Error: User details not found.</div>;\n//   }\n\n//   const { username, profilePicture } = state;\n\n//   // Use username and profilePicture as needed in your FeedScreen component\n//   return (\n//     <div>\n//       <h1>Welcome, {username}</h1>\n//       <img src={URL.createObjectURL(profilePicture)} alt=\"Profile\" />\n//       {/* Other feed screen content */}\n//     </div>\n//   );\n// }\n\n// export default FeedScreen;\nvar _c;\n$RefreshReg$(_c, \"FeedScreen\");","map":{"version":3,"names":["InfoBar","MainScreen","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","FeedScreen","_s","mode","setMode","location","state","displayName","profilePicture","profileImageUrl","setProfileImageUrl","File","Blob","URL","createObjectURL","fetch","then","response","blob","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","rel","href","integrity","crossOrigin","className","userImg","username","_c","$RefreshReg$"],"sources":["/home/gp/Ex2-web-1/src/feed/FeedScreen.js"],"sourcesContent":["import InfoBar from \"./InfoBar\"\nimport MainScreen from \"./MainScreen\"\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport './LightModeFeed.css'\nimport './NightModeFeed.css'\n\nfunction FeedScreen() {\n    const [mode, setMode] = useState(true);\n    const location = useLocation();\n    const { state } = location;\n    const { displayName, profilePicture } = state;\n    const [profileImageUrl, setProfileImageUrl] = useState(null);\n\n    useEffect(() => {\n        if (profilePicture instanceof File || profilePicture instanceof Blob) {\n            setProfileImageUrl(URL.createObjectURL(profilePicture));\n        } else if (typeof profilePicture === 'string') {\n            // Assuming profilePicture is a URL string\n            fetch(profilePicture)\n                .then(response => response.blob())\n                .then(blob => setProfileImageUrl(URL.createObjectURL(blob)))\n                .catch(error => console.error('Error fetching profile picture:', error));\n        }\n    }, [profilePicture]);\n\n    return (\n        <>\n            <title>Feed</title>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\"\n                integrity=\"sha256-2TnSHycBDAm2wpZmgdi0z81kykGPJAkiUY+Wf97RbvY=\"\n                crossOrigin=\"anonymous\"\n            />\n            <div className={mode ? \"light-mode\" : \"night-mode\"}>\n                {profileImageUrl && <InfoBar userImg={profileImageUrl} />}\n                <MainScreen username={displayName} userImg={profileImageUrl} mode={mode} setMode={setMode} />\n            </div>\n        </>\n    );\n}\n\nexport default FeedScreen;\n\n\n\n\n\n// import React from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// function FeedScreen() {\n//   const location = useLocation();\n//   const { state } = location;\n\n//   if (!state || !state.username || !state.profilePicture) {\n//     // Handle case where user details are not available\n//     return <div>Error: User details not found.</div>;\n//   }\n\n//   const { username, profilePicture } = state;\n\n//   // Use username and profilePicture as needed in your FeedScreen component\n//   return (\n//     <div>\n//       <h1>Welcome, {username}</h1>\n//       <img src={URL.createObjectURL(profilePicture)} alt=\"Profile\" />\n//       {/* Other feed screen content */}\n//     </div>\n//   );\n// }\n\n// export default FeedScreen;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,qBAAqB;AAC5B,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAM,CAAC,GAAGD,QAAQ;EAC1B,MAAM;IAAEE,WAAW;IAAEC;EAAe,CAAC,GAAGF,KAAK;EAC7C,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACZ,IAAIa,cAAc,YAAYG,IAAI,IAAIH,cAAc,YAAYI,IAAI,EAAE;MAClEF,kBAAkB,CAACG,GAAG,CAACC,eAAe,CAACN,cAAc,CAAC,CAAC;IAC3D,CAAC,MAAM,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;MAC3C;MACAO,KAAK,CAACP,cAAc,CAAC,CAChBQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIR,kBAAkB,CAACG,GAAG,CAACC,eAAe,CAACI,IAAI,CAAC,CAAC,CAAC,CAC3DC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;IAChF;EACJ,CAAC,EAAE,CAACZ,cAAc,CAAC,CAAC;EAEpB,oBACIV,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAO;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnB5B,OAAA;MACI6B,GAAG,EAAC,YAAY;MAChBC,IAAI,EAAC,yEAAyE;MAC9EC,SAAS,EAAC,qDAAqD;MAC/DC,WAAW,EAAC;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF5B,OAAA;MAAKiC,SAAS,EAAE5B,IAAI,GAAG,YAAY,GAAG,YAAa;MAAAmB,QAAA,GAC9Cb,eAAe,iBAAIX,OAAA,CAACN,OAAO;QAACwC,OAAO,EAAEvB;MAAgB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzD5B,OAAA,CAACL,UAAU;QAACwC,QAAQ,EAAE1B,WAAY;QAACyB,OAAO,EAAEvB,eAAgB;QAACN,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAEA;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC;EAAA,eACR,CAAC;AAEX;AAACxB,EAAA,CAlCQD,UAAU;EAAA,QAEEL,WAAW;AAAA;AAAAsC,EAAA,GAFvBjC,UAAU;AAoCnB,eAAeA,UAAU;;AAMzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}